// This is your Prisma schema file
// Learn more: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// User model for authentication
model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String   // Will be hashed
  name      String
  phone     String?
  company   String?
  role      String   @default("user") // user, admin
  
  // Relations
  invoices  Invoice[]
  clients   Client[]
  sessions  Session[]
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@map("users")
}

// Client model
model Client {
  id        String   @id @default(uuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  name      String
  email     String?
  phone     String?
  address   String?
  company   String?
  vatin     String?
  
  // Relations
  invoices  Invoice[]
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@map("clients")
  @@index([userId])
}

// Invoice model
model Invoice {
  id              String   @id @default(uuid())
  invoiceNumber   String   @unique
  userId          String
  user            User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  clientId        String
  client          Client   @relation(fields: [clientId], references: [id], onDelete: Restrict)
  
  issueDate       DateTime
  dueDate         DateTime
  status          String   // draft, sent, paid, overdue, cancelled
  
  // Financial details
  subtotal        Float    @default(0)
  taxRate         Float    @default(0)
  taxAmount       Float    @default(0)
  discount        Float    @default(0)
  discountAmount  Float    @default(0)
  total           Float    @default(0)
  
  // Additional info
  notes           String?
  terms           String?
  template        String   @default("modern")
  
  // Recurring settings
  recurring       String   @default("none") // none, weekly, monthly, quarterly, yearly
  nextRecurringDate DateTime?
  parentInvoiceId String?
  
  // Relations
  items           InvoiceItem[]
  
  // Timestamps
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  sentAt          DateTime?
  paidAt          DateTime?
  cancelledAt     DateTime?
  
  @@map("invoices")
  @@index([userId])
  @@index([clientId])
  @@index([status])
  @@index([invoiceNumber])
}

// Invoice Items model
model InvoiceItem {
  id          String   @id @default(uuid())
  invoiceId   String
  invoice     Invoice  @relation(fields: [invoiceId], references: [id], onDelete: Cascade)
  
  description String
  quantity    Float    @default(1)
  rate        Float    @default(0)
  amount      Float    @default(0)
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  @@map("invoice_items")
  @@index([invoiceId])
}

// Session model for authentication
model Session {
  id        String   @id @default(uuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  token     String   @unique
  expiresAt DateTime
  
  createdAt DateTime @default(now())
  
  @@map("sessions")
  @@index([userId])
  @@index([token])
}
